enum Role {
  USER
  ADMIN
}

type User {
  id: ID!
  name: String!
  email: String!
  picture: String
  isGoogleAuthenticated: Boolean!
  role: Role!
  createdAt: String!
  tickets: [Ticket!]!
  events: [Events!]!
}

input InitSingUpInput {
  name: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

input CompleteSignUpInput {
  key: String!
  code: String!
}

input LoginInput {
  email: String!
  password: String!
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  me: User
  user(id: ID!): User
  users: [User!]!
  login(input: LoginInput!): AuthPayload
}

type Mutation {
  initSignUp(input: InitSingUpInput!): Boolean!
  completeSignUp(input: CompleteSignUpInput!): AuthPayload!
  updateUser(input: UpdateUserInput!): AuthPayload!
  deleteUser(id: ID!): Boolean!
}
